" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc


"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5


" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins
" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'


""" Leader
let mapleader=" "

""" Plugin
set surround
set multiple-cursors
set commentary
set argtextobj
set textobj-entire
set ReplaceWithRegister
set NERDTree
set which-key
set notimeout

""" Input method exchange
set keep-english-in-normal
set keep-english-in-normal-and-restore-in-insert

""" Plugin settings
let g:argtextobj_pairs="[:],(:),{:}"
"""" which-key
set notimeout
" show vim actions
" let g:WhichKey_ShowVimActions="true"
let g:WhichKey_ShowTypedSequence="true"
" Popup delay
let g:WhichKey_DefaultDelay=1000

""" NERDTree
nmap <leader>e :NERDTreeToggle<CR>
nmap <leader>o :NERDTreeFocus<CR>
""" nmap   :NERDTreeFind<CR>
""" use `q` to quit from NERDTree

""" Options
set number
set relativenumber
set hlsearch
set incsearch
set showmode
set so=5
""" using system clipboard
set clipboard+=unnamed
""" Idea specific settings
set ideajoin
set ideastatusicon=gray
set idearefactormode=keep

""" Navigation-buffer
let g:WhichKeyDesc_buffer="<Space>b Buffer"
nmap ]b :bnext<CR>
nmap [b :bprevious<CR>
nnoremap <leader>c :bd<CR>
nmap <leader>bc <Action>(CloseContent)
nmap <leader>bC <Action>(CloseAllEditorsButActive)

""" Navigation-Window
let g:WhichKeyDesc_window="<Space>w Window"
nmap <C-h>  <C-w>h
nmap <C-j>  <C-w>j
nmap <C-k>  <C-w>k
nmap <C-l>  <C-w>l
nmap \| :vsplit<cr>
nmap \\ :split<cr>
nmap <C-w>o <Action>(ClosedAllEditorsButActive) 
nmap <leader>ws <Action>(HideActiveWindow)

"""  Lsp
nmap <leader>k <Action>(QuickJavaDoc)
nmap <leader>lr <Action>(RenameElement)
nmap <leader>ls <Action>(FileStructurePopup)
nmap <leader>lf <Action>(ReformatCode)
nmap <leader>la <Action>(ShowIntentionActions)
" Movement
nmap [m <Action>(MethodUp)
nmap ]m <Action>(MethodDown)
map gd <Action>(GotoDeclaration)
nmap gl <Action>(ShowErrorDescription)
nmap gd <Action>(GotoDeclarationOnly)
nmap gi <Action>(GotoImplementation)
nmap ]d <Action>(GotoNextError)
nmap [d <Action>(GotoPreviousError)
nmap ]v <Action>(VcsShowNextChangeMarker)
nmap [v <Action>(VcsShowPrevChangeMarker)


"""" Debug
nmap <leader>dm <Action>(XDebugger.MuteBreakpoints)

""" VCS
let g:WhichKeyDesc_git="<Space>w Git"
nmap <leader>ga <Action>(Annotate)
" Current file
nmap <leader>gC <Action>(Vcs.ShowTabbedFileHistory)
" Current repo
nmap <leader>gc <Action>(Vcs.Show.Log)


"""  Lsp
let g:WhichKeyDesc_lsp="<Space>l Lsp"
nmap <leader>k <Action>(QuickJavaDoc)
nmap <leader>lr <Action>(RenameElement)
nmap <leader>ls <Action>(FileStructurePopup)
nmap <leader>lf <Action>(ReformatCode)
nmap <leader>la <Action>(ShowIntentionActions)
nmap <leader>ly <Action>(TypeHierarchyPopupMenu)


" Comment
nmap <leader>/ <Action>(CommentByLineComment)
vmap <leader>/ <Action>(CommentByLineComment)
" Search
nmap <leader>ff <Action>(FindInPath)
nmap <leader>fF <Action>(SearchEverywhere)
nmap <leader>fw <Action>(Find)

" Intelij
" Use ctrl-c as an ide shortcut in normal and visual modes
sethandler <C-C> n-v:ide i:vim

